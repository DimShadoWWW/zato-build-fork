# Maintainer: Darius Suchojad <dsuch@zato.io>
# Contributor: Laurent Bercot <ska-devel@skarnet.org>

pkgname=zato
pkgver=@@ZATO_VERSION@@
pkgrel=@@PACKAGE_VERSION@@
pkgdesc="An open source ESB and application server, in Python"
url="https://zato.io/"
arch="all"
license="LGPL"
options=
depends="bash-completion gcc g++ gfortran haproxy libbz2 \
libgfortran libsasl libuuid \
swig py2-pip py-numpy py-numpy-f2py py2-numpy py2-numpy-f2py py-scipy"
makedepends="findutils git libev-dev libevent-dev libffi-dev \
libxml2-dev libxslt-dev linux-headers musl-dev openldap-dev postgresql-dev \
python2-dev yaml-dev"
subpackages=
source="zato-$pkgver.tar bash-completion zato.initd"
install="zato.post-deinstall zato.post-install zato.post-upgrade zato.pre-install zato.pre-upgrade"
ZATO_ROOT_DIR=@@ZATO_ROOT_DIR@@
ZATO_TARGET_DIR=@@ZATO_TARGET_DIR@@
REPODEST="$srcdir/../.."

build() {
  sudo rm -rf "$ZATO_TARGET_DIR"

  # Zato builds in-place, so we move everything to ZATO_TARGET_DIR
  sudo mkdir -p "$ZATO_ROOT_DIR"
  sudo mv -f "$builddir" "$ZATO_TARGET_DIR"

  # Distro-agnostic build prep
  cd $ZATO_TARGET_DIR/code
  cp ../LICENSE.txt .
  cp ../licenses_3rd_party.txt . || true
  mv -f `ls -a -1 | grep -vFx -e . -e ..` ..
  cd ..
  rmdir code

  # Everything is in place in $ZATO_TARGET_DIR, we just call install.sh
  RUNNING_FROM_ABUILD=1
  export RUNNING_FROM_ABUILD
  ./install.sh

  # And we move the result back
  sudo mv -f "$ZATO_TARGET_DIR" "$builddir"
}


check() {
  # We move everything...
  sudo mkdir -p "$ZATO_ROOT_DIR"
  sudo mv -f "$builddir" "$ZATO_TARGET_DIR"

  # We run the tests...  
  dir=`pwd`
  cd "$ZATO_TARGET_DIR"
  # XXX: Remove the "|| true" before shipping!
  ./run-tests.py nosetests || true
  cd "$dir"

  # ... We move everything back.
  sudo mv -f "$ZATO_TARGET_DIR" "$builddir"
}


package() {
  # Distro-agnostic build cleanup
  find "$builddir" -name '*.pyc' -exec rm -f '{}' \;
  find "$builddir" ! -perm /004 -exec chmod 644 '{}' \;
  rm -rf "$builddir/hotfixman.sh" "$builddir/hotfixes"

  # Move everything to $pkgdir/ for staging
  mkdir -p "$pkgdir$ZATO_ROOT_DIR"
  mv -f "$builddir" "$pkgdir$ZATO_TARGET_DIR"

  # copy additional files
  mkdir -p "$pkgdir/etc/bash-completion.d"
  cp -f "$srcdir/bash-completion" "$pkgdir/etc/bash-completion.d/zato"
  mkdir -p "$pkgdir/etc/init.d"
  cp -f "$srcdir/zato.initd" "$pkgdir/etc/init.d/zato"
  chmod 0755 "$pkgdir/etc/init.d/zato"
}

