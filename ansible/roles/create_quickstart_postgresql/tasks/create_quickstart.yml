---

- name: create quickstart directory
  file: path=/opt/zato/env/qs-1/ owner=zato group=zato
        state=directory
  become_user: zato

- name: create quickstart on Debian-based systems
  shell: rm -rf /opt/zato/env/qs-1 &&
         mkdir -p /opt/zato/env/qs-1 &&
         /opt/zato/{{ package['version'] }}/bin/zato quickstart create \
         --odb_host {{ odb['host'] }} \
         --odb_port {{ odb['postgresql']['port'] }} \
         --odb_user "{{ odb['user'] }}" \
         --odb_db_name "{{ odb['name'] }}" \
         --odb_password "{{ odb['pass'] }}" \
         --kvdb_password '' \
         /opt/zato/env/qs-1 postgresql localhost 6379
         --verbose
  become_user: zato
  when: ansible_os_family == "Debian"

- name: create quickstart on RHEL-based systems
  shell: rm -rf /opt/zato/env/qs-1 &&
         mkdir -p /opt/zato/env/qs-1 &&
         /opt/zato/{{ package['version'] }}/code/bin/zato quickstart create \
         --odb_host "{{ odb['host'] }}" \
         --odb_port "{{ odb['postgresql']['port'] }}" \
         --odb_user "{{ odb['user'] }}" \
         --odb_db_name "{{ odb['name'] }}" \
         --odb_password "{{ odb['pass'] }}" \
         --kvdb_password '' \
         /opt/zato/env/qs-1 postgresql localhost 6379 \
         --verbose
  become_user: zato
  when: ansible_distribution == "CentOS"

- name: create symlinks to Zato startup scripts
  file: src=/opt/zato/env/qs-1/{{ item }}
        dest=/etc/zato/components-enabled/{{ item }}
        state=link
  with_items:
    - load-balancer
    - server1
    - server2
    - web-admin

- name: start Zato components as services
  service: name=zato state=restarted enabled=yes
