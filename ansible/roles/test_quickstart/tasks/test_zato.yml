---

- name: Create directory to store tests
  file: path=/opt/zato/test_results owner=zato group=zato state=directory

- name: Create files to store test outputs
  file: path=/opt/zato/test_results/{{ item }} owner=zato group=zato state=touch
  with_items:
    - ping-load-balancer.json
    - check-lb-alive.html
    - ping-server1.json
    - ping-server2.json
    - run-tests.txt
    - info-load-balancer.json
    - info-server1.json
    - info-server2.json
    - info-web-admin.json

- name: Pause for 20 seconds to make sure all components are up and working
  pause: seconds=20

- name: Check if load balancer is alive
  shell: curl -v localhost:11223/zato-lb-alive | tee /opt/zato/test_results/check-lb-alive.html

- name: Ping load balancer
  shell: curl localhost:11223/zato/ping | tee /opt/zato/test_results/ping-load-balancer.json

- name: Ping server1
  shell: curl -v localhost:17010/zato/ping | tee /opt/zato/test_results/ping-server1.json

- name: Ping server2
  shell: curl -v localhost:17011/zato/ping | tee /opt/zato/test_results/ping-server2.json

- name: Get info on components on Debian-based systems
  shell: /opt/zato/current/bin/zato info \
         --format json {{ item }} 2>&1 | tee /opt/zato/test_results/info-{{ item }}.json
         chdir=/opt/zato/env/qs-1
  with_items:
    - load-balancer
    - server1
    - server2
    - web-admin
  when: ansible_os_family == "Debian"

- name: Get info on components on RHEL-based systems
  shell: /opt/zato/current/code/bin/zato info \
         --format json {{ item }} 2>&1 | tee /opt/zato/test_results/info-{{ item }}.json
         chdir=/opt/zato/env/qs-1
  with_items:
    - load-balancer
    - server1
    - server2
    - web-admin
  when: ansible_distribution == "CentOS"

- name: Run apitests on Debian-based systems
  shell: bin/py run-tests.py nosetests 2>&1 | tee /opt/zato/test_results/run-tests.txt
         chdir=/opt/zato/current
  when: ansible_os_family == "Debian"

- name: Run apitests on RHEL-based systems
  shell: bin/py run-tests.py nosetests 2>&1 | tee /opt/zato/test_results/run-tests.txt
      chdir=/opt/zato/current/code
  when: ansible_distribution == "CentOS"

- name: List all test logs
  shell: ls -1 /opt/zato/test_results/
  register: test_logs

- name: Fetch test results from the test box
  fetch: src=/opt/zato/test_results/{{ item }}
         dest={{ playbook_dir }}/test_results/{{ system }}/{{ version }}/
         flat=yes
  with_items:
    - "{{ test_logs.stdout_lines }}"
