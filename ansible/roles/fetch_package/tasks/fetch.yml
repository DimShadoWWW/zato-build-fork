---

# Pre-set some facts
- set_fact: package_fetched_debian_i386=""
- set_fact: package_fetched_debian_amd64=""
- set_fact: package_fetched_centos=""

- name: Fetch Zato package from Debian-based i386 systems
  fetch: >
    src=/opt/tmp/deb/zato-{{ version }}-{{ release }}_i386-{{ ansible_distribution_release }}.deb 
    dest=./output/{{ system }}/
    flat=yes
  when: ansible_os_family == "Debian" and ansible_userspace_architecture == "i386"
  register: package_fetched_debian_i386

- name: Fetch Zato package from Debian-based amd64 systems
  fetch: >
    src=/opt/tmp/deb/zato-{{ version }}-{{ release }}_amd64-{{ ansible_distribution_release }}.deb 
    dest=./output/{{ system }}/
    flat=yes
  when: ansible_os_family == "Debian" and ansible_userspace_architecture == "x86_64"
  register: package_fetched_debian_amd64

- name: Fetch Zato package on CentOS
  fetch: >
    src=/root/rpmbuild/RPMS/{{ ansible_userspace_architecture }}/zato-{{ version }}-{{ release }}.el{{ ansible_distribution_major_version }}.{{ ansible_userspace_architecture }}.rpm
    dest=./output/{{ system }}/
    flat=yes
  when: ansible_distribution == "CentOS"
  register: package_fetched_centos

# Make the registered variables available for other hosts
- set_fact: package_fetched_debian_i386={{ package_fetched_debian_i386 }}
  when: ansible_os_family == "Debian" and ansible_userspace_architecture == "i386"
- set_fact: package_fetched_debian_amd64={{ package_fetched_debian_amd64 }}
  when: ansible_os_family == "Debian" and ansible_userspace_architecture == "x86_64"
- set_fact: package_fetched_centos={{ package_fetched_centos }}
  when: ansible_distribution == "CentOS"
